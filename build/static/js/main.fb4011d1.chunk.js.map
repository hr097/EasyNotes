{"version":3,"sources":["context/TabContext.js","components/Todos.js","components/NoteModal.js","components/NoteComponent.js","components/Notes.js","components/Passwords.js","components/ContentTab.js","components/Sidebar.js","components/Navbar.js","components/MainContainer.js","App.js","reportWebVitals.js","index.js"],"names":["TabContextCreate","createContext","TabContext","props","_useState","useState","_useState2","_slicedToArray","TodoText","SetTodoText","_useState3","LocalTodo","localStorage","getItem","JSON","parse","getTodos","_useState4","AddTodoText","SetAddTodoText","_useState5","LocalNotes","getNotes","_useState6","Note","SetNote","_useState7","getPassword","_useState8","Passwords","SetPasswords","_useState9","Tabid","uuid","TabName","getTabs","_useState10","Tab","SetTab","_useState11","length","_useState12","selectedTabId","setSelectedTabId","useEffect","setItem","stringify","_useState13","_useState14","sidebarVisible","setSidebarVisible","_useState15","_useState16","isMobile","setIsMobile","React","createElement","Fragment","Provider","value","AddTab","concat","_toConsumableArray","UpdateTabs","e","index","updatedTabs","target","DeleteTabs","deletedTabId","newList","splice","updatedTodoText","filter","todo","TabId","updatedNotes","note","handleTabSelection","tabId","children","Todos","Tabs","useContext","selectedTab","find","tab","style","addBox","px","addTextField","backgroundColor","border","borderRadius","input","color","& fieldset","todolist","mt","minHeight","height","marginBottom","todoContainer","mb","paddingTop","paddingBottom","width","maxWidth","&:hover","cursor","transition","transform","CheckBox","filteredTodos","task","toLowerCase","includes","searchText","Box","sx","TextField","placeholder","fullWidth","onChange","InputProps","endAdornment","Stack","direction","spacing","Button","variant","disableRipple","onClick","Todoid","isSelected","preventDefault","map","data","key","Container","justifyContent","alignItems","FormControlLabel","label","textDecoration","control","Checkbox","event","item","_objectSpread","checked","handleCheckboxChange","MdOutlineDelete","DeleteTask","NoteModal","ModalBox","position","top","left","bgcolor","boxShadow","p","editIcon","TitleInput","ContetntInput","deleteIcon","marginLeft","open","setOpen","FiEdit3","DeleteNote","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","Fade","in","size","title","handleNoteChange","component","contentBox","id","multiline","rows","description","NoteComponent","notesContainer","overflow","mr","footer","marginTop","Divider","Grid","container","Typography","Date","MainContainer","display","placeItems","margin","ChildContainer","flexWrap","sm","lg","xl","xs","AddButtonContainer","borderStyle","AddButton","fontSize","pointer","Notes","today","toLocaleDateString","undefined","month","day","field","filteredNotes","Title","Description","notes","md","NotesId","newNote","CiSquarePlus","PsdAddBox","psdlist","psdContainer","truncate","whiteSpace","textOverflow","PasswordBox","outline","UserName","Label","SetLabel","SetUserName","Password","SetPassword","showPassword","setShowPassword","filteredLabels","psd","onSubmit","encryptedPassword","password","CryptoJS","AES","encrypt","toString","Passid","type","isPasswordVisible","Tooltip","arrow","username","navigator","clipboard","writeText","decrypt","enc","Utf8","readOnly","marginRight","MdVisibilityOff","MdVisibility","ContentTab","setValue","SearchText","SetSearchText","mainContainer","overflowX","Contentheader","padding","TabsContainer","TabsTitle","&::after","content","bottom","right","background","HeaderContainer","SearchBox","TabColor","dateTime","weekday","TabList","newValue","TabPanel","Sidebar","SideBarBody","pt","float","zIndex","addButton","borderColor","textBox","textBoxGrid","iconsGrid","ml","DeleteIcon","SidebarItem","handleWindowResize","isMobileScreen","window","innerWidth","addEventListener","removeEventListener","IoIosMenu","startIcon","AiOutlinePlus","Navbar","pl","LogoText","fontweight","letterSpacing","hamburgerIcon","RxHamburgerMenu","MainCotainer","theme","createTheme","typography","fontFamily","palette","primary","main","secondary","App","useMediaQuery","ThemeProvider","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.fb4011d1.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\n//************* Exporting Context *************\nexport const TabContextCreate = createContext();\n\nexport default function TabContext(props) {\n  //**************************************************** Todos ****************************************************\n\n  //getting data from local storage and adding to state\n  //if we don't get data then data will be lost after refreshing the page\n  const getTodos = () => {\n    const LocalTodo = localStorage.getItem(\"Tasks\");\n    if (LocalTodo === null) {\n      return [];\n    } else {\n      return JSON.parse(LocalTodo);\n    }\n  };\n  \n  //************* Add todo text *************\n  const [TodoText, SetTodoText] = useState(\"\");\n  const [AddTodoText, SetAddTodoText] = useState(getTodos());\n\n  //**************************************************** Notes ****************************************************\n\n  //************* get data from local storage *************\n  const getNotes = () => {\n    const LocalNotes = localStorage.getItem(\"Notes\");\n    if (LocalNotes === null) {\n      return [];\n    } else {\n      return JSON.parse(LocalNotes);\n    }\n  };\n\n  //Notes State\n  const [Note, SetNote] = useState(getNotes());\n\n  //**************************************************** Passwords ****************************************************\n\n  //************* get data from local storage *************\n  const getPassword = () => {\n    const LocalNotes = localStorage.getItem(\"Passwords\");\n    if (LocalNotes === null) {\n      return [];\n    } else {\n      return JSON.parse(LocalNotes);\n    }\n  };\n\n  const [Passwords, SetPasswords] = useState(getPassword());\n\n  //**************************************************** Tabs ****************************************************\n\n  //************* Getting Tabs from localStorage *************\n  const getTabs = () => {\n    const LocalTodo = localStorage.getItem(\"Tabs\");\n    if (LocalTodo === null) {\n      return [{ Tabid: uuid(), TabName: \"My WorkSpace\" }];\n    } else {\n      return JSON.parse(LocalTodo);\n    }\n  };\n\n  //Tabs State\n  const [Tab, SetTab] = useState(getTabs());\n  const [selectedTabId, setSelectedTabId] = useState(\n    Tab.length > 0 ? Tab[0].Tabid : null\n  );\n\n  //************* Add Tabs *************\n  const AddTab = () => {\n    SetTab([\n      ...Tab,\n      {\n        Tabid: uuid(),\n        TabName: \"\",\n      },\n    ]);\n  };\n\n  //************* Update Tabs *************\n  const UpdateTabs = (e, index) => {\n    const updatedTabs = [...Tab];\n    updatedTabs[index].TabName = e.target.value;\n    SetTab(updatedTabs);\n  };\n\n  //************* set Tabs data to local storage *************\n  useEffect(() => {\n    localStorage.setItem(\"Tabs\", JSON.stringify(Tab));\n  }, [Tab]);\n\n  //************* delete Tabs function *************\n  const DeleteTabs = (index) => {\n    const deletedTabId = Tab[index].Tabid;\n    let newList = [...Tab];\n    newList.splice(index, 1);\n    SetTab([...newList]);\n\n    // Remove the associated data from the AddTodoText array\n    const updatedTodoText = AddTodoText.filter(\n      (todo) => todo.TabId !== deletedTabId\n    );\n    SetAddTodoText(updatedTodoText);\n\n    // Remove the associated notes\n    const updatedNotes = Note.filter((note) => note.TabId !== deletedTabId);\n    SetNote(updatedNotes);\n\n    // If the deleted tab was the currently selected tab, clear the selectedTabId\n    if (selectedTabId === deletedTabId) {\n      setSelectedTabId(null);\n    }\n  };\n\n  //************* Handle Tab Selection *************\n  const handleTabSelection = (tabId) => {\n    setSelectedTabId(tabId);\n  };\n\n  //**************************************************** Sidebar Toggle ****************************************************\n\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n  const [isMobile, setIsMobile] = useState(false);\n  return (\n    <>\n      <TabContextCreate.Provider\n        value={{\n          Tab,\n          AddTab,\n          UpdateTabs,\n          DeleteTabs,\n          handleTabSelection,\n          selectedTabId,\n          TodoText,\n          SetTodoText,\n          AddTodoText,\n          SetAddTodoText,\n          Note,\n          SetNote,\n          Passwords,\n          SetPasswords,\n          sidebarVisible,\n          setSidebarVisible,\n          isMobile,\n          setIsMobile,\n        }}\n      >\n        {props.children}\n      </TabContextCreate.Provider>\n    </>\n  );\n}\n","import React, { useEffect, useContext } from \"react\";\nimport {\n  Box,\n  TextField,\n  Stack,\n  Button,\n  Container,\n  Checkbox,\n  FormControlLabel,\n} from \"@mui/material\";\nimport { v4 as uuid } from \"uuid\";\nimport { MdOutlineDelete } from \"react-icons/md\";\nimport { TabContextCreate } from \"../context/TabContext\";\n\nexport default function Todos(props) {\n  //************* Using Context *************\n  const Tabs = useContext(TabContextCreate);\n\n  const selectedTab = Tabs.Tab.find((tab) => tab.Tabid === Tabs.selectedTabId);\n\n  //Css\n  const style = {\n    addBox: {\n      px: Tabs.isMobile ? 0 : 3.5,\n    },\n    addTextField: {\n      backgroundColor: \"transparent\",\n      border: \"2px #2d3036  solid\",\n      borderRadius: 1,\n      input: {\n        color: \"rgb(232, 232, 232)\",\n      },\n      \"& fieldset\": { border: \"none\" },\n    },\n    todolist: {\n      mt: 2,\n      borderRadius: 2,\n      minHeight: \"48vh\",\n      height: \"auto\",\n      marginBottom: \"10px\",\n      px: Tabs.isMobile ? 0 : 3.5,\n    },\n    todoContainer: {\n      backgroundColor: \"#2d3036\",\n      mt: 1,\n      mb: 1,\n      paddingTop: 0.5,\n      paddingBottom: 0.5,\n      borderRadius: 1,\n      width: \"100%\",\n      maxWidth: \"100%\",\n      \"&:hover\": {\n        backgroundColor: \"#353940\",\n        cursor: \"pointer\",\n        transition: \"transform .3s ease-out\",\n        transform: \"scale(1.01)\",\n      },\n    },\n    CheckBox: {\n      color: \"rgb(232, 232, 232)\",\n    },\n  };\n\n  //************* Add button handling *************\n  const AddTodo = (e) => {\n    if (Tabs.TodoText !== \"\") {\n      Tabs.SetAddTodoText([\n        ...Tabs.AddTodoText,\n        {\n          Todoid: uuid(),\n          TabId: Tabs.selectedTabId,\n          task: Tabs.TodoText,\n          isSelected: false,\n        },\n      ]);\n      Tabs.SetTodoText(\"\");\n      e.preventDefault();\n    }\n  };\n\n  //************* set data to local storage *************\n  useEffect(() => {\n    localStorage.setItem(\"Tasks\", JSON.stringify(Tabs.AddTodoText));\n  }, [Tabs.AddTodoText]);\n\n  //************* delete todos function *************\n  const DeleteTask = (index) => {\n    let newList = [...Tabs.AddTodoText];\n    newList.splice(index, 1);\n    Tabs.SetAddTodoText([...newList]);\n  };\n\n  //************* handle Checkbox Change *************\n  const handleCheckboxChange = (event, index, Todoid) => {\n    //update checkbox status\n    Tabs.SetAddTodoText(\n      Tabs.AddTodoText.map((item) =>\n        item.Todoid === Todoid\n          ? { ...item, isSelected: event.target.checked }\n          : item\n      )\n    );\n  };\n\n  // Filter the todos based on the search text\n  const filteredTodos = Tabs.AddTodoText.filter((todo) =>\n    todo.task.toLowerCase().includes(props.searchText.toLowerCase())\n  );\n\n  return (\n    <>\n      {/* Add Todo Text Box */}\n      <Box sx={style.addBox}>\n        <TextField\n          placeholder=\"Enter Task\"\n          sx={style.addTextField}\n          fullWidth\n          value={Tabs.TodoText}\n          onChange={(e) => {\n            Tabs.SetTodoText(e.target.value);\n          }}\n          InputProps={{\n            endAdornment: (\n              <Stack direction=\"row\" spacing={1}>\n                <Button variant=\"contained\" disableRipple onClick={AddTodo}>\n                  Add\n                </Button>\n              </Stack>\n            ),\n          }}\n        />\n      </Box>\n\n      {/* Task List */}\n      <Box sx={style.todolist}>\n        {Tabs.AddTodoText != null\n          ? filteredTodos.map((data, key) => {\n              if (selectedTab && data.TabId === selectedTab.Tabid) {\n                return (\n                  <Container maxWidth key={key} sx={style.todoContainer}>\n                    <Stack\n                      direction=\"row\"\n                      justifyContent=\"space-between\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <FormControlLabel\n                        label={\n                          <span\n                            style={{\n                              textDecoration: data.isSelected\n                                ? \"line-through\"\n                                : \"none\",\n                            }}\n                          >\n                            {data.task}\n                          </span>\n                        }\n                        control={\n                          <Checkbox\n                            sx={style.CheckBox}\n                            color=\"primary\"\n                            onChange={(event) =>\n                              handleCheckboxChange(event, key, data.Todoid)\n                            }\n                            checked={data.isSelected}\n                          />\n                        }\n                      />\n\n                      <Box>\n                        <MdOutlineDelete\n                          style={{\n                            cursor: \"pointer\",\n                          }}\n                          onClick={() => {\n                            DeleteTask(key);\n                          }}\n                        />\n                      </Box>\n                    </Stack>\n                  </Container>\n                );\n              } else {\n                return null;\n              }\n            })\n          : \"\"}\n      </Box>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Backdrop, Box, Modal, Fade, TextField } from \"@mui/material\";\nimport { FiEdit3 } from \"react-icons/fi\";\nimport { MdOutlineDelete } from \"react-icons/md\";\n\nexport default function NoteModal(props) {\n  const style = {\n    ModalBox: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"75%\",\n      height: \"70%\",\n      bgcolor: \"#2d3036\",\n      boxShadow: 24,\n      p: 4,\n      borderRadius: 1,\n    },\n    editIcon: {\n      cursor: \"pointer\",\n    },\n    TitleInput: {\n      input: {\n        color: \"rgb(232, 232, 232)\",\n        width: \"100%\",\n      },\n      \"& fieldset\": { border: \"none\" },\n    },\n    ContetntInput: {\n      \"& fieldset\": { border: \"none\" },\n    },\n    deleteIcon: {\n      marginLeft: 8,\n      cursor: \"pointer\",\n    },\n  };\n\n  //State for modal open-close\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      {/*Note footer edit icon */}\n      <FiEdit3 style={style.editIcon} onClick={handleOpen} />\n\n      {/*Note footer delete icon */}\n      <MdOutlineDelete\n        style={style.deleteIcon}\n        onClick={() => props.DeleteNote(props.index)}\n      />\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        slots={{ backdrop: Backdrop }}\n        slotProps={{\n          backdrop: {\n            timeout: 500,\n          },\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style.ModalBox}>\n            {/* Modal title */}\n            <TextField\n              size=\"small\"\n              placeholder=\"Add Title\"\n              sx={style.TitleInput}\n              value={props.title}\n              onChange={(event) =>\n                props.handleNoteChange(props.index, \"Title\", event.target.value)\n              }\n            />\n\n            {/* Modal content */}\n            <Box component=\"div\" sx={style.contentBox}>\n              <TextField\n                fullWidth\n                id=\"outlined-multiline-static\"\n                multiline\n                rows={19}\n                placeholder=\"Add Note here...\"\n                value={props.description}\n                sx={style.ContetntInput}\n                InputProps={{ style: { color: \"#BCBCBC\" } }}\n                onChange={(event) =>\n                  props.handleNoteChange(\n                    props.index,\n                    \"Description\",\n                    event.target.value\n                  )\n                }\n              />\n            </Box>\n          </Box>\n        </Fade>\n      </Modal>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box, Divider, Typography, Grid, TextField } from \"@mui/material\";\nimport NoteModal from \"./NoteModal\";\n\nexport default function NoteComponent(props) {\n  //Style\n  const style = {\n    notesContainer: {\n      backgroundColor: \"#2d3036\",\n      width: 250,\n      height: 310,\n      p: 1.5,\n      borderRadius: 1,\n      overflow: \"hidden\",\n      mr: 1,\n      mb: 1,\n    },\n    contentBox: {\n      height: \"231px\",\n      overflow: \"hidden\",\n    },\n    footer: {\n      marginTop: \"10px\",\n    },\n    TitleInput: {\n      input: {\n        color: \"rgb(232, 232, 232)\",\n        width: \"100%\",\n      },\n      \"& fieldset\": { border: \"none\" },\n    },\n    ContetntInput: {\n      \"& fieldset\": { border: \"none\" },\n    },\n  };\n\n  return (\n    <>\n      <Box component=\"div\" sx={style.notesContainer}>\n        {/* Note Title */}\n        <TextField\n          size=\"small\"\n          placeholder=\"Add Title\"\n          sx={style.TitleInput}\n          value={props.title}\n          onChange={(event) =>\n            props.handleNoteChange(props.index, \"Title\", event.target.value)\n          }\n        />\n\n        {/* Note Content */}\n        <Box component=\"div\" sx={style.contentBox}>\n          <TextField\n            fullWidth\n            id=\"outlined-multiline-static\"\n            multiline\n            rows={10}\n            placeholder=\"Add Note here...\"\n            value={props.description}\n            sx={style.ContetntInput}\n            InputProps={{ style: { color: \"#BCBCBC\" } }}\n            onChange={(event) =>\n              props.handleNoteChange(\n                props.index,\n                \"Description\",\n                event.target.value\n              )\n            }\n          />\n        </Box>\n\n        {/* Note footer */}\n        <Box component=\"div\" sx={style.footer}>\n          <Divider />\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            style={{ marginTop: 7 }}\n          >\n            {/* Date */}\n            <Typography variant=\"p\">{props.Date}</Typography>\n            <Box component=\"div\">\n              {/* Note Modal */}\n              <NoteModal\n                index={props.index}\n                title={props.title}\n                description={props.description}\n                handleNoteChange={props.handleNoteChange}\n                DeleteNote={props.DeleteNote}\n              />\n            </Box>\n          </Grid>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import React, { useEffect, useContext } from \"react\";\nimport { Box, Grid } from \"@mui/material\";\nimport NoteComponent from \"./NoteComponent\";\nimport { CiSquarePlus } from \"react-icons/ci\";\nimport { v4 as uuid } from \"uuid\";\nimport { TabContextCreate } from \"../context/TabContext\";\n\n//Style\nconst style = {\n  MainContainer: {\n    display: \"grid\",\n    placeItems: \"center\",\n    margin: \"auto\",\n  },\n  ChildContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: {\n      sm: \"100%\",\n      lg: \"90%\",\n      xl: \"90%\",\n    },\n    //  width:\"89%\"\n    justifyContent: {\n      xs: \"center\",\n      sm: \"center\",\n      lg: \"flex-start\",\n      xl: \"flex-start\",\n    },\n  },\n  AddButtonContainer: {\n    border: \"3px solid #2d3036\",\n    borderStyle: \"dashed\",\n    width: 250,\n    height: 310,\n    p: 1.5,\n    borderRadius: 1,\n    overflow: \"hidden\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    mb: 1,\n  },\n  AddButton: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    fontSize: \"30px\",\n    color: \"#2d3036\",\n    pointer: \"cursor\",\n  },\n};\n\nexport default function Notes(props) {\n  //Clock\n  var today = new Date().toLocaleDateString(undefined, {\n    month: \"long\",\n    day: \"2-digit\",\n  });\n\n  //************* Using Context *************\n  const Tabs = useContext(TabContextCreate);\n\n  const selectedTab = Tabs.Tab.find((tab) => tab.Tabid === Tabs.selectedTabId);\n\n  //Add Note component\n  const AddComponent = () => {\n    const newNote = {\n      NotesId: uuid(),\n      TabId: Tabs.selectedTabId,\n      Title: \"\",\n      Description: \"\",\n      Date: today,\n    };\n    Tabs.SetNote([...Tabs.Note, newNote]);\n  };\n\n  //Note Change function\n  const handleNoteChange = (index, field, value) => {\n    const updatedNotes = [...Tabs.Note];\n    updatedNotes[index][field] = value;\n    Tabs.SetNote(updatedNotes);\n  };\n\n  //************* set data to local storage *************\n  useEffect(() => {\n    localStorage.setItem(\"Notes\", JSON.stringify(Tabs.Note));\n  }, [Tabs.Note]);\n\n  //************* delete Notes function *************\n  const DeleteNote = (index) => {\n    let newList = [...Tabs.Note];\n    newList.splice(index, 1);\n    Tabs.SetNote([...newList]);\n  };\n\n  // Filter the notes based on the search text\n  const filteredNotes = Tabs.Note.filter(\n    (note) =>\n      note.Title.toLowerCase().includes(props.searchText.toLowerCase()) ||\n      note.Description.toLowerCase().includes(props.searchText.toLowerCase())\n  );\n\n  return (\n    <>\n      <Box sx={style.MainContainer}>\n        <Box sx={style.ChildContainer}>\n          {filteredNotes.map((notes, index) => {\n            if (selectedTab && notes.TabId === selectedTab.Tabid) {\n              return (\n                // Note Component\n                <Grid item xs={12} sm={12} md={6} lg={3} key={index}>\n                  <NoteComponent\n                    key={index}\n                    index={index}\n                    id={notes.NotesId}\n                    title={notes.Title}\n                    description={notes.Description}\n                    Date={notes.Date}\n                    handleNoteChange={handleNoteChange}\n                    DeleteNote={DeleteNote}\n                  />\n                </Grid>\n              );\n            } else {\n              return null;\n            }\n          })}\n\n          {/* Add new Note */}\n\n          <Box\n            component=\"div\"\n            sx={style.AddButtonContainer}\n            onClick={AddComponent}\n          >\n            <CiSquarePlus style={style.AddButton} />\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  Box,\n  Grid,\n  TextField,\n  Button,\n  Container,\n  Tooltip,\n} from \"@mui/material\";\nimport { v4 as uuid } from \"uuid\";\nimport { TabContextCreate } from \"../context/TabContext\";\nimport { MdOutlineDelete, MdVisibility, MdVisibilityOff } from \"react-icons/md\";\nimport CryptoJS from \"crypto-js\";\n\nexport default function Passwords(props) {\n  //************* Using Context *************\n  const Tabs = useContext(TabContextCreate);\n  const selectedTab = Tabs.Passwords.find(\n    (tab) => tab.TabId === Tabs.selectedTabId\n  );\n\n  const style = {\n    PsdAddBox: {\n      px: Tabs.isMobile ? 0 : 3.5,\n    },\n    TextField: {\n      backgroundColor: \"transparent\",\n      border: \"2px #2d3036  solid\",\n      borderRadius: 1,\n      input: {\n        color: \"rgb(232, 232, 232)\",\n      },\n      \"& fieldset\": { border: \"none\" },\n    },\n    psdlist: {\n      mt: 2,\n      borderRadius: 2,\n      minHeight: \"48vh\",\n      height: \"auto\",\n      marginBottom: \"10px\",\n      px: Tabs.isMobile ? 0 : 3.5,\n    },\n    psdContainer: {\n      backgroundColor: \"#2d3036\",\n      mt: 1,\n      mb: 1,\n      borderRadius: 1,\n      width: \"100%\",\n      maxWidth: \"100%\",\n      \"&:hover\": {\n        backgroundColor: \"#353940\",\n        cursor: \"pointer\",\n        transition: \"transform .3s ease-out\",\n        transform: \"scale(1.01)\",\n      },\n    },\n    truncate: {\n      maxWidth: \"150px\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    PasswordBox: {\n      backgroundColor: \"transparent\",\n      border: \"none\",\n      borderRadius: 1,\n      color: \"rgb(232, 232, 232)\",\n      fontSize: \"16px\",\n      outline: \"none\",\n    },\n    UserName: {\n      \"&:hover\": {\n        backgroundColor: \"#1976d2\",\n        color: \"#fff\",\n      },\n    },\n  };\n\n  const [Label, SetLabel] = useState(\"\");\n  const [UserName, SetUserName] = useState(\"\");\n  const [Password, SetPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(null);\n\n  //Encrypt and Decrypt password\n  const encryptPassword = (password) => {\n    const encryptedPassword = CryptoJS.AES.encrypt(\n      password,\n      \"encryptionKey\"\n    ).toString();\n    return encryptedPassword;\n  };\n\n  const decryptPassword = (encryptedPassword) => {\n    const decryptedPassword = CryptoJS.AES.decrypt(\n      encryptedPassword,\n      \"encryptionKey\"\n    ).toString(CryptoJS.enc.Utf8);\n    return decryptedPassword;\n  };\n\n  //************* Add button handling *************\n  const AddPassword = (e) => {\n    if (Label !== \"\" && UserName !== \"\" && Password !== \"\") {\n      const encryptedPassword = encryptPassword(Password);\n      Tabs.SetPasswords([\n        ...Tabs.Passwords,\n        {\n          Passid: uuid(),\n          TabId: Tabs.selectedTabId,\n          Label: Label,\n          UserName: UserName,\n          Password: encryptedPassword,\n          // Password: Password,\n        },\n      ]);\n    }\n    SetLabel(\"\");\n    SetUserName(\"\");\n    SetPassword(\"\");\n    e.preventDefault();\n  };\n\n  //************* set data to local storage *************\n  useEffect(() => {\n    localStorage.setItem(\"Passwords\", JSON.stringify(Tabs.Passwords));\n  }, [Tabs.Passwords]);\n\n  //************* delete todos function *************\n  const DeleteTask = (index) => {\n    let newList = [...Tabs.Passwords];\n    newList.splice(index, 1);\n    Tabs.SetPasswords([...newList]);\n  };\n\n  const togglePasswordVisibility = (index) => {\n    // setShowPassword(!showPassword);\n    setShowPassword(index === showPassword ? null : index);\n  };\n\n  // Filter the labels based on the search text\n  const filteredLabels = Tabs.Passwords.filter((psd) =>\n    psd.Label.toLowerCase().includes(props.searchText.toLowerCase())\n  );\n\n  const copyUsername = (username) => {\n    navigator.clipboard.writeText(username);\n  };\n\n  return (\n    <>\n      <Box sx={style.PsdAddBox}>\n        <form onSubmit={AddPassword}>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs={12} sm={6} md={3}>\n              <TextField\n                placeholder=\"Enter Label\"\n                fullWidth\n                sx={style.TextField}\n                onChange={(e) => {\n                  SetLabel(e.target.value);\n                }}\n                value={Label}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <TextField\n                placeholder=\"Username\"\n                fullWidth\n                sx={style.TextField}\n                onChange={(e) => {\n                  SetUserName(e.target.value);\n                }}\n                value={UserName}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <TextField\n                type=\"password\"\n                placeholder=\"Password\"\n                fullWidth\n                sx={style.TextField}\n                onChange={(e) => {\n                  SetPassword(e.target.value);\n                }}\n                value={Password}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={1}>\n              <Button variant=\"contained\" size=\"large\" type=\"submit\">\n                Add\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n\n      {/* Task List */}\n      <Box sx={style.psdlist}>\n        {Tabs.Passwords.length > 0 &&\n          filteredLabels.map((data, key) => {\n            if (selectedTab && data.TabId === selectedTab.TabId) {\n              const isPasswordVisible = key === showPassword;\n              return (\n                <Container maxWidth key={key} sx={style.psdContainer}>\n                  <Box\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Grid container spacing={1} alignItems=\"center\">\n                      <Grid item xs={3}>\n                        <p style={style.truncate}>{data.Label}</p>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <Tooltip title=\"Copy\" arrow>\n                          <p\n                            style={{ ...style.truncate, ...style.UserName }}\n                            onClick={() => copyUsername(data.UserName)}\n                          >\n                            {data.UserName}\n                          </p>\n                        </Tooltip>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <input\n                          type={isPasswordVisible ? \"text\" : \"password\"}\n                          value={decryptPassword(data.Password)}\n                          style={style.PasswordBox}\n                          readOnly\n                        />\n                      </Grid>\n                    </Grid>\n\n                    <Box\n                      style={{\n                        marginRight: \"8px\",\n                      }}\n                      onClick={() => togglePasswordVisibility(key)}\n                    >\n                      {isPasswordVisible ? (\n                        <MdVisibilityOff />\n                      ) : (\n                        <MdVisibility />\n                      )}\n                    </Box>\n\n                    <Box>\n                      <MdOutlineDelete\n                        style={{\n                          cursor: \"pointer\",\n                        }}\n                        onClick={() => {\n                          DeleteTask(key);\n                        }}\n                      />\n                    </Box>\n                  </Box>\n                </Container>\n              );\n            } else {\n              return null;\n            }\n          })}\n      </Box>\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Box, Tab, Typography, Grid } from \"@mui/material\";\nimport { TabPanel, TabContext, TabList } from \"@mui/lab\";\nimport { useState } from \"react\";\nimport Todos from \"./Todos\";\nimport Notes from \"./Notes\";\nimport Passwords from \"./Passwords\";\nimport { TabContextCreate } from \"../context/TabContext\";\n\n//************* Using Context *************\n\n// Main function\nexport default function ContentTab() {\n  const Tabs = useContext(TabContextCreate);\n  const [value, setValue] = useState(\"1\");\n  const [SearchText, SetSearchText] = useState(\"\");\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const style = {\n    mainContainer: {\n      marginTop: 6.5,\n      marginLeft: Tabs.isMobile ? \"0\" : \"220px\",\n      maxWidth: \"100%\",\n      overflowX: \"hidden\",\n    },\n    Contentheader: {\n      padding: 3,\n    },\n    TabsContainer: {\n      width: \"100%\",\n    },\n    TabsTitle: {\n      p: \"0 24px\",\n      position: \"relative\",\n      \"&::after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        bottom: 0,\n        left: \"0px\",\n        right: \"24px\",\n        height: \"0.8px\",\n        background:\n          \"linear-gradient(to right, transparent, transparent 24px, #1e2126 24px, #1e2126)\",\n      },\n    },\n    HeaderContainer: {\n      color: \"rgb(255, 255, 255)\",\n      alignItems: \"center\",\n    },\n    SearchBox: {\n      backgroundColor: \"transparent\",\n      padding: 10,\n      border: \"2px #2d3036  solid\",\n      borderRadius: 5,\n      color: \"rgb(232, 232, 232)\",\n      outline: \"none\",\n    },\n    TabColor: {\n      color: \"rgb(232, 232, 232)\",\n    },\n    dateTime: {\n      fontSize: Tabs.isMobile ? \"24px\" : \"32px\",\n    },\n  };\n\n  //Clock\n  var today = new Date().toLocaleDateString(undefined, {\n    day: \"2-digit\",\n    month: \"long\",\n    weekday: \"long\",\n  });\n\n  return (\n    <>\n      <Box sx={style.mainContainer}>\n        {/* Header Container */}\n        <Box sx={style.Contentheader}>\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"baseline\"\n          >\n            {/* Date and Time */}\n            <Grid xs>\n              <Typography sx={style.dateTime}>{today}</Typography>\n            </Grid>\n            {/* Search Box */}\n            <Grid style={{ marginTop: \"10px\" }}>\n              <input\n                type=\"text\"\n                placeholder=\"Search\"\n                style={style.SearchBox}\n                onChange={(e) => {\n                  SetSearchText(e.target.value);\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n\n        <Box sx={style.TabsContainer}>\n          <TabContext value={value}>\n            {/* Tabs */}\n            <Box sx={style.TabsTitle}>\n              <TabList onChange={handleChange}>\n                <Tab\n                  label=\"ToDo Task\"\n                  value=\"1\"\n                  disableRipple\n                  sx={style.TabColor}\n                />\n                <Tab\n                  label=\"Notes\"\n                  value=\"2\"\n                  disableRipple\n                  sx={style.TabColor}\n                />\n                <Tab\n                  label=\"Passwords Manager\"\n                  value=\"3\"\n                  disableRipple\n                  sx={style.TabColor}\n                />\n              </TabList>\n            </Box>\n\n            {/* Tab Content */}\n            <TabPanel value=\"1\">\n              <Todos searchText={SearchText} />\n            </TabPanel>\n            <TabPanel value=\"2\">\n              <Notes searchText={SearchText} />\n            </TabPanel>\n            <TabPanel value=\"3\">\n              <Passwords searchText={SearchText} />\n            </TabPanel>\n          </TabContext>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { Box, Stack, Grid, Button, TextField } from \"@mui/material\";\nimport { IoIosMenu } from \"react-icons/io\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { MdOutlineDelete } from \"react-icons/md\";\nimport { TabContextCreate } from \"../context/TabContext\";\n\nexport default function Sidebar() {\n  //************* Using Context *************\n  const Tabs = useContext(TabContextCreate);\n\n  //Style\n  const style = {\n    SideBarBody: {\n      backgroundColor: \"#2d3036\",\n      width: \"100%\",\n      maxWidth: \"200px\",\n      pt: 3.5,\n      p: 2,\n      minHeight: \"100vh\",\n      height: \"100%\",\n      float: \"left\",\n      position: \"fixed\",\n      overflow: \"auto\",\n      zIndex: 1,\n      transition: \"transform 0.4s ease-in-out\", // Added transition property for smooth animation\n      transform: Tabs.sidebarVisible ? \"translateX(0)\" : \"translateX(-100%)\", // Added transform property to move the sidebar off-screen\n    },\n    addButton: {\n      mt: 1.5,\n      color: \"rgb(232, 232, 232)\",\n      borderColor: \"#808080\",\n      \"&:hover\": {\n        borderColor: \"#808080 \",\n        backgroundColor: \"rgba(232, 232, 232,0.04)\",\n      },\n    },\n    textBox: {\n      input: {\n        color: \"rgb(232, 232, 232)\",\n        p: 0.5,\n      },\n    },\n    textBoxGrid: {\n      \"& fieldset\": { border: \"none\" },\n    },\n    iconsGrid: {\n      fontSize: 20,\n      mt: 1,\n      ml: 1,\n    },\n    DeleteIcon: {\n      mt: 0.7,\n      cursor: \"pointer\",\n    },\n    SidebarItem: {\n      borderRadius: 1,\n      padding: 0.5,\n      alignItems: \"center\",\n      mb: 1.1,\n      cursor: \"pointer\",\n      transition: \"background-color 0.3s\",\n      \"&:hover\": {\n        backgroundColor: \"#353940\",\n      },\n    },\n    selectedTab: {\n      transition: \"background-color 0.8s\",\n      backgroundColor: \"#22262b\",\n      \"&:hover\": {\n        backgroundColor: \"#22262b\",\n      },\n    },\n  };\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      const isMobileScreen = window.innerWidth <= 767;\n      Tabs.setIsMobile(isMobileScreen);\n      if (isMobileScreen) {\n        Tabs.setSidebarVisible(false);\n      } else {\n        Tabs.setSidebarVisible(true);\n      }\n    };\n\n    handleWindowResize(); // Set initial isMobile state on component mount\n\n    window.addEventListener(\"resize\", handleWindowResize); // Update isMobile state on window resize\n\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize); // Cleanup the event listener on component unmount\n    };\n  }, []);\n\n  return (\n    <>\n      <Box sx={style.SideBarBody}>\n        {Tabs.Tab.map((tab, index) => (\n          <Box\n            sx={{\n              ...style.SidebarItem,\n              ...(tab.Tabid === Tabs.selectedTabId && style.selectedTab),\n            }}\n            key={index}\n            onClick={() => Tabs.handleTabSelection(tab.Tabid)}\n          >\n            <Grid container alignItems=\"center\" spacing={1}>\n              <Grid item xs={1.4} sx={style.iconsGrid}>\n                <IoIosMenu />\n              </Grid>\n              <Grid item xs={8} sx={style.textBoxGrid}>\n                <TextField\n                  size=\"small\"\n                  sx={style.textBox}\n                  value={tab.TabName}\n                  onChange={(e) => Tabs.UpdateTabs(e, index)}\n                />\n              </Grid>\n              <Grid item xs={2} sx={style.DeleteIcon}>\n                <MdOutlineDelete onClick={() => Tabs.DeleteTabs(index)} />\n              </Grid>\n            </Grid>\n          </Box>\n        ))}\n\n        <Stack>\n          <Button\n            variant=\"outlined\"\n            startIcon={<AiOutlinePlus />}\n            sx={style.addButton}\n            onClick={Tabs.AddTab}\n          >\n            Add\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { RxHamburgerMenu } from \"react-icons/rx\";\nimport { TabContextCreate } from \"../context/TabContext\";\n\nexport default function Navbar() {\n  //************* Using Context *************\n  const Tabs = useContext(TabContextCreate);\n\n  //Style for navbar\n  const style = {\n    Navbar: {\n      backgroundColor: \"#2d3036\",\n      padding: \"12px\",\n      pl: 3,\n      // pl: isMobile ? 2 : 3,\n      position: \"fixed\",\n      top: 0,\n      width: \"100%\",\n      zIndex: \"100\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    LogoText: {\n      fontSize: \"20px\",\n      fontweight: 700,\n      letterSpacing: \"2px\",\n    },\n    hamburgerIcon: {\n      cursor: \"pointer\",\n      fontSize: 24,\n      color: \"rgb(232, 232, 232)\",\n      marginRight: \"8px\",\n      marginTop: \"5px\",\n    },\n  };\n\n  const handleToggleSidebar = () => {\n    Tabs.setSidebarVisible(!Tabs.sidebarVisible);\n  };\n  return (\n    <>\n      <Box sx={style.Navbar}>\n        {Tabs.isMobile && (\n          <Box>\n            <RxHamburgerMenu\n              style={style.hamburgerIcon}\n              onClick={handleToggleSidebar}\n            />\n          </Box>\n        )}\n        <Typography variant=\"h1\" sx={style.LogoText}>\n          EasyNotes By HR\n        </Typography>\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport ContentTab from \"./ContentTab\";\nimport Sidebar from \"./Sidebar\";\nimport Navbar from \"./Navbar\";\nimport TabContext from \"../context/TabContext\";\nimport { Box } from \"@mui/material\";\n\nexport default function MainCotainer() {\n  return (\n    <>\n      <Box style={{}}>\n        <TabContext>\n          <Navbar></Navbar>\n          <Sidebar></Sidebar>\n          <ContentTab></ContentTab>\n        </TabContext>\n      </Box>\n    </>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport { createTheme, ThemeProvider, useMediaQuery } from \"@mui/material\";\n// import Mobile from \"./components/Mobile\";\nimport MainCotainer from \"./components/MainContainer\";\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: \"Poppins,sans-serif\",\n    color: \"rgb(232, 232, 232)\",\n  },\n  palette: {\n    primary: {\n      main: \"#4b89dd\",\n    },\n    secondary: {\n      main: \"#e8e8e8\",\n    },\n  },\n});\n\nfunction App() {\n  const isMobile = useMediaQuery(\"(max-width: 600px)\");\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        {/* If screen size is small then it will call Mobile component */}\n        {isMobile ? \n        // <Mobile /> \n        <MainCotainer/>\n        : <MainCotainer/>}\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}